---

resources:

- name: cf-for-k8s-master
  type: git
  icon: github-box
  source:
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((github_private_key.private_key))
    branch: master
    ignore_paths:
      - ci/**

- name: cf-k8s-networking
  type: git
  icon: github-box
  source:
    branch: master
    private_key: ((github_private_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git

- name: cf-k8s-networking-ci
  type: git
  icon: github-box
  source:
    branch: master
    private_key: ((github_private_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git
    paths:
      - ci
      - config

- name: cfroutesync-image
  type: docker-image
  icon: docker
  source:
    repository: gcr.io/cf-networking-images/cf-k8s-networking/cfroutesync
    username: _json_key
    password: ((gcp_gcr_service_account_key))

groups:
  - name: build
    jobs:
      - run-units
      - publish-image
  - name: cf-for-k8s
    jobs:
      - dont-smoke-for-k8s-deploy-and-test
jobs:
# Build
- name: run-units
  plan:
    - in_parallel:
        - get: cf-k8s-networking
          trigger: true
        - get: cf-k8s-networking-ci
    - task: run-unit-tests
      file: cf-k8s-networking-ci/ci/tasks/tests/run-units.yml


- name: publish-image
  plan:
    - in_parallel:
        - get: cf-k8s-networking
          passed: [run-units]
          trigger: true
        - get: cf-k8s-networking-ci
    - task: build-tag-file
      file: cf-k8s-networking-ci/ci/tasks/docker/build-tag-file-for-image.yml
    - put: cfroutesync-image
      params:
        build: cf-k8s-networking/cfroutesync
        dockerfile: cf-k8s-networking/cfroutesync/deploy/Dockerfile
        additional_tags: docker-info/tags
        tag_as_latest: true

# Environment to run tests
- name: dont-smoke-for-k8s-deploy-and-test
  serial: true
  serial_groups: [dont-smoke-for-k8s]
  plan:
    - in_parallel:
        - get: cf-for-k8s-master
          trigger: true
        - get: cf-k8s-networking-ci
        - get: cf-k8s-networking
    - task: create-gke-cluster
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/create-gke-cluster.yml
      params:
        CLUSTER_NAME: &dont-smoke-for-k8s-cluster-name dont-smoke-for-k8s
        GCP_SERVICE_ACCOUNT_KEY: ((shared_gcp_account_creds))
    - task: install-cf
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/install-cf-for-k8s.yml
      params:
        CF_DOMAIN: &dont-smoke-for-k8s-domain "dont-smoke-for-k8s.routing.lol"
        CLUSTER_NAME: *dont-smoke-for-k8s-cluster-name
        GCP_SERVICE_ACCOUNT_KEY: ((shared_gcp_account_creds))
        KPACK_GCR_ACCOUNT_KEY: ((gcp_gcr_service_account_key))
    - task: run-smoke-test
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/run-smoke-test.yml
      params:
        SMOKE_TEST_SKIP_SSL: true
    - task: generate-integration-configs
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/generate-integration-config.yml
    - task: networking-acceptance-gke-tests
      file: cf-k8s-networking-ci/ci/tasks/tests/run-networking-acceptance-gke.yml
      params:
        INTEGRATION_CONFIG_FILE: "config.json"
        CLUSTER_NAME: *dont-smoke-for-k8s-cluster-name
        GCP_SERVICE_ACCOUNT_KEY: ((shared_gcp_account_creds))
    - task: destroy-cluster
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/destroy-cluster.yml
      params:
        CF_DOMAIN: *dont-smoke-for-k8s-domain
        CLUSTER_NAME: *dont-smoke-for-k8s-cluster-name
        GCP_SERVICE_ACCOUNT_KEY: ((shared_gcp_account_creds))
